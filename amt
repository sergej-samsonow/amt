#!/bin/bash
# amt - application management tool

# determine core installation root and look for minimal setup
AMT_SYSTEM_CONTEXT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
AMT_OWN_PROCESS=$$
AMT_CORE_LIB="$AMT_SYSTEM_CONTEXT/core/lib"
function panic_if_core_file_is_missing {
    MISSING_FILE=$1
    if [ ! -f "$AMT_CORE_LIB/$MISSING_FILE" ]
    then
        echo "CORE ERROR: broken setup: $MISSING_FILE not found in: $AMT_CORE_LIB installation is defect reinstall amt"
        kill $AMT_OWN_PROCESS
    fi
}
declare -a AMT_CORE_FILES=("message.sh" "help" "update" "check-command.pl")
for AMT_CORE_FILE in "${AMT_CORE_FILES[@]}"
do 
    panic_if_core_file_is_missing $AMT_CORE_FILE
done

source $AMT_CORE_LIB/message.sh

# determine amt context - from wich lib folder command should be loaded
AMT_LOCAL_CONTEXT="$PWD/amt"
AMT_CONTEXT=$AMT_LOCAL_CONTEXT
if [ ! -d $AMT_LOCAL_CONTEXT ]
then
    AMT_CONTEXT=$AMT_SYSTEM_CONTEXT
fi
export AMT_LIB_FOLDER=$AMT_CONTEXT/lib
export AMT_ETC_FOLDER=$AMT_CONTEXT/etc

# determine if any command is called 
if [ $# -eq 0 ]
then
    export AMT_COMMAND="help"
else 
    export AMT_COMMAND=$1
fi

# determine command location important check for core command first!
# core commands should not be overriden!
if [ -f "$AMT_CORE_LIB/$AMT_COMMAND" ]
then
    export AMT_COMMAND_PATH="$AMT_CORE_LIB/$AMT_COMMAND"
elif   [ -f "$AMT_LIB_FOLDER/$AMT_COMMAND" ]
then
    export AMT_COMMAND_PATH="$AMT_LIB_FOLDER/$AMT_COMMAND"
else 
    error_msg "$AMT_COMMAND not found! Lib context: $AMT_LIB_FOLDER. Core lib context: $AMT_CORE_LIB"
    exit 1
fi

# determine if command file is executable
if [ ! -x $AMT_COMMAND_PATH ]
then
    error_msg "$AMT_COMMAND in $AMT_COMMAND_PATH is not executable!"
    exit 1
fi


# check command environment and parameter
# parameters check described in file itself
# plus additionals checks 
#   amt-check-exclusive-access      - command requires exclusive access no 
#                                     concurent execution
#   amt-check-wd-file:configuration - command requires configuration file 
#                                     in current working directory
AMT_CONTEXT_VALIDATION=$( perl "$AMT_CORE_LIB/check-command.pl" "$@" )
if [ "$AMT_CONTEXT_VALIDATION" != "is valid" ]
then
    error_msg $AMT_CONTEXT_VALIDATION
    exit 1
fi

# call command
"$AMT_COMMAND_PATH" "$@"
AMT_EXIT_CODE=$?
exit $AMT_EXIT_CODE
